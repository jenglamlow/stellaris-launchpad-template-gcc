/*
 * template.h
 *
 * Header file
 *
 */

#ifndef TEMPLATE_H
#define TEMPLATE_H

/*----------------------------------------------------------------------------*/
/* Includes                                                                   */
/*----------------------------------------------------------------------------*/

/* Third party libraries include */

/* Local includes */

/*----------------------------------------------------------------------------*/
/* Constants                                                                  */
/*----------------------------------------------------------------------------*/

#define CONSTANT_1 (1U)

/*----------------------------------------------------------------------------*/
/* Types                                                                      */
/*----------------------------------------------------------------------------*/

typedef struct
{
    uint8_t var_a;
} template_struct_t;

/*----------------------------------------------------------------------------*/
/* Event call-backs                                                           */
/*----------------------------------------------------------------------------*/

typedef void (*template_cb_t)(void);

/*----------------------------------------------------------------------------*/
/* Services                                                                   */
/*----------------------------------------------------------------------------*/

typedef struct
{
    void (*start)(template_cb_t     template_cb);

} template_services_t;

/*----------------------------------------------------------------------------*/
/* Initialisation                                                             */
/*----------------------------------------------------------------------------*/

void template_init(template_services_t *services);

#endif
